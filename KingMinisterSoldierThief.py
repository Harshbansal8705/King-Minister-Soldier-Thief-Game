# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'game.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtTest
from PyQt5.QtWidgets import QWidget, QApplication
from PyQt5.QtGui import QIcon
import sys
import random
from playsound import playsound


class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setFixedSize(800, 600)
        MainWindow.setWindowIcon(QIcon("Window Icon.jpg"))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(172, 130, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(172, 130, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(172, 130, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(172, 130, 47))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        MainWindow.setPalette(palette)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 95))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(226, 142, 68))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 77, 28))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(181, 153, 53))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(226, 185, 148))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 95))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(226, 142, 68))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 77, 28))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(181, 153, 53))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(226, 185, 148))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 95))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(226, 142, 68))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(131, 77, 28))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(197, 115, 42))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.groupBox.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.groupBox.setFont(font)
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setObjectName("groupBox")
        self.player1 = QtWidgets.QLabel(self.groupBox)
        self.player1.setGeometry(QtCore.QRect(60, 130, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.player1.setFont(font)
        self.player1.setAlignment(QtCore.Qt.AlignCenter)
        self.player1.setObjectName("player1")
        self.player2 = QtWidgets.QLabel(self.groupBox)
        self.player2.setGeometry(QtCore.QRect(60, 230, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.player2.setFont(font)
        self.player2.setAlignment(QtCore.Qt.AlignCenter)
        self.player2.setObjectName("player2")
        self.player3 = QtWidgets.QLabel(self.groupBox)
        self.player3.setGeometry(QtCore.QRect(60, 330, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.player3.setFont(font)
        self.player3.setAlignment(QtCore.Qt.AlignCenter)
        self.player3.setObjectName("player3")
        self.player4 = QtWidgets.QLabel(self.groupBox)
        self.player4.setGeometry(QtCore.QRect(60, 430, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.player4.setFont(font)
        self.player4.setAlignment(QtCore.Qt.AlignCenter)
        self.player4.setObjectName("player4")
        self.name_1 = QtWidgets.QLineEdit(self.groupBox)
        self.name_1.setGeometry(QtCore.QRect(370, 130, 280, 50))
        self.name_1.setObjectName("name_1")
        self.name_1.setStyleSheet("background-color:red")
        self.name_2 = QtWidgets.QLineEdit(self.groupBox)
        self.name_2.setGeometry(QtCore.QRect(370, 230, 280, 50))
        self.name_2.setObjectName("name_2")
        self.name_2.setStyleSheet("background-color:blue")
        self.name_3 = QtWidgets.QLineEdit(self.groupBox)
        self.name_3.setGeometry(QtCore.QRect(370, 330, 280, 50))
        self.name_3.setObjectName("name_3")
        self.name_3.setStyleSheet("background-color:yellow")
        self.name_4 = QtWidgets.QLineEdit(self.groupBox)
        self.name_4.setGeometry(QtCore.QRect(370, 430, 280, 50))
        self.name_4.setObjectName("name_4")
        self.name_4.setStyleSheet("background-color:green")
        self.submit = QtWidgets.QPushButton(self.groupBox)
        self.submit.setGeometry(QtCore.QRect(280, 490, 161, 41))
        self.submit.setObjectName("submit")
        self.submit.setStyleSheet("background-color:pink")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(170, 50, 371, 41))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(98, 58, 21))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.label.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(22)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.groupBox)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.player_1 = QtWidgets.QLabel(self.groupBox)
        self.player_1.setGeometry(QtCore.QRect(50, 60, 291, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.player_1.setFont(font)
        self.player_1.setAlignment(QtCore.Qt.AlignCenter)
        self.player_1.setObjectName("player_1")
        self.player_1.setStyleSheet("color:red")
        self.player_1.hide()
        self.player_2 = QtWidgets.QLabel(self.groupBox)
        self.player_2.setGeometry(QtCore.QRect(460, 60, 291, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.player_2.setFont(font)
        self.player_2.setAlignment(QtCore.Qt.AlignCenter)
        self.player_2.setObjectName("player_2")
        self.player_2.setStyleSheet("color:blue")
        self.player_2.hide()
        self.player_3 = QtWidgets.QLabel(self.groupBox)
        self.player_3.setGeometry(QtCore.QRect(50, 320, 291, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.player_3.setFont(font)
        self.player_3.setAlignment(QtCore.Qt.AlignCenter)
        self.player_3.setObjectName("player_3")
        self.player_3.setStyleSheet("color:yellow")
        self.player_3.hide()
        self.player_4 = QtWidgets.QLabel(self.groupBox)
        self.player_4.setGeometry(QtCore.QRect(460, 320, 291, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.player_4.setFont(font)
        self.player_4.setAlignment(QtCore.Qt.AlignCenter)
        self.player_4.setObjectName("player_4")
        self.player_4.setStyleSheet("color:green")
        self.player_4.hide()
        self.score_1 = QtWidgets.QLabel(self.groupBox)
        self.score_1.setGeometry(QtCore.QRect(120, 131, 191, 51))
        self.score_1.setObjectName("score_1")
        self.score_1.hide()
        self.score_2 = QtWidgets.QLabel(self.groupBox)
        self.score_2.setGeometry(QtCore.QRect(530, 131, 191, 51))
        self.score_2.setObjectName("score_2")
        self.score_2.hide()
        self.score_3 = QtWidgets.QLabel(self.groupBox)
        self.score_3.setGeometry(QtCore.QRect(120, 381, 191, 51))
        self.score_3.setObjectName("score_3")
        self.score_3.hide()
        self.score_4 = QtWidgets.QLabel(self.groupBox)
        self.score_4.setGeometry(QtCore.QRect(530, 381, 191, 51))
        self.score_4.setObjectName("score_4")
        self.score_4.hide()
        self.shuffle = QtWidgets.QPushButton(self.groupBox)
        self.shuffle.setGeometry(QtCore.QRect(320, 460, 161, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.shuffle.setPalette(palette)
        self.shuffle.setStyleSheet("background-color:red;\n"
                                   "color:blue;\n"
                                   "border-style:outset;\n"
                                   "border-width:2px;\n"
                                   "font:bold 20px")
        self.shuffle.setObjectName("shuffle")
        self.shuffle.hide()
        self.show_king = QtWidgets.QPushButton(self.groupBox)
        self.show_king.setGeometry(QtCore.QRect(320, 460, 161, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.show_king.setPalette(palette)
        self.show_king.setStyleSheet("background-color:yellow;\n"
                                     "color:green;\n"
                                     "border-style:outset;\n"
                                     "border-width:2px;\n"
                                     "font:bold 20px")
        self.show_king.setObjectName("show_king")
        self.show_king.hide()
        self.show_minister = QtWidgets.QPushButton(self.groupBox)
        self.show_minister.setGeometry(QtCore.QRect(320, 460, 161, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.show_minister.setPalette(palette)
        self.show_minister.setStyleSheet("background-color:yellow;\n"
                                         "color:green;\n"
                                         "border-style:outset;\n"
                                         "border-width:2px;\n"
                                         "font:bold 20px")
        self.show_minister.setObjectName("show_minister")
        self.show_minister.hide()
        self.label1 = QtWidgets.QLabel(self.groupBox)
        self.label1.setGeometry(QtCore.QRect(200, 200, 371, 41))
        self.label1.setAlignment(QtCore.Qt.AlignCenter)
        self.label1.setStyleSheet("color:pink")
        self.king_pic_1 = QtWidgets.QLabel(self.groupBox)
        self.king_pic_1.setGeometry(QtCore.QRect(50, 10, 191, 100))
        self.king_pic_1.setPixmap(QtGui.QPixmap("king.png"))
        self.king_pic_1.setObjectName("king_pic_1")
        self.king_pic_1.setScaledContents(True)
        self.king_pic_1.hide()
        self.king_pic_2 = QtWidgets.QLabel(self.groupBox)
        self.king_pic_2.setGeometry(QtCore.QRect(550, 10, 191, 100))
        self.king_pic_2.setPixmap(QtGui.QPixmap("king.png"))
        self.king_pic_2.setObjectName("king_pic_2")
        self.king_pic_2.setScaledContents(True)
        self.king_pic_2.hide()
        self.king_pic_3 = QtWidgets.QLabel(self.groupBox)
        self.king_pic_3.setGeometry(QtCore.QRect(50, 268, 191, 100))
        self.king_pic_3.setPixmap(QtGui.QPixmap("king.png"))
        self.king_pic_3.setObjectName("king_pic_3")
        self.king_pic_3.setScaledContents(True)
        self.king_pic_3.hide()
        self.king_pic_4 = QtWidgets.QLabel(self.groupBox)
        self.king_pic_4.setGeometry(QtCore.QRect(550, 268, 191, 100))
        self.king_pic_4.setPixmap(QtGui.QPixmap("king.png"))
        self.king_pic_4.setObjectName("king_pic_4")
        self.king_pic_4.setScaledContents(True)
        self.king_pic_4.hide()
        self.minister_pic_1 = QtWidgets.QLabel(self.groupBox)
        self.minister_pic_1.setGeometry(QtCore.QRect(50, 10, 191, 80))
        self.minister_pic_1.setPixmap(QtGui.QPixmap("minister.png"))
        self.minister_pic_1.setObjectName("minister_pic_1")
        self.minister_pic_1.setScaledContents(True)
        self.minister_pic_1.hide()
        self.minister_pic_2 = QtWidgets.QLabel(self.groupBox)
        self.minister_pic_2.setGeometry(QtCore.QRect(550, 10, 191, 80))
        self.minister_pic_2.setPixmap(QtGui.QPixmap("minister.png"))
        self.minister_pic_2.setObjectName("minister_pic_2")
        self.minister_pic_2.setScaledContents(True)
        self.minister_pic_2.hide()
        self.minister_pic_3 = QtWidgets.QLabel(self.groupBox)
        self.minister_pic_3.setGeometry(QtCore.QRect(50, 268, 191, 80))
        self.minister_pic_3.setPixmap(QtGui.QPixmap("minister.png"))
        self.minister_pic_3.setObjectName("minister_pic_3")
        self.minister_pic_3.setScaledContents(True)
        self.minister_pic_3.hide()
        self.minister_pic_4 = QtWidgets.QLabel(self.groupBox)
        self.minister_pic_4.setGeometry(QtCore.QRect(550, 268, 191, 80))
        self.minister_pic_4.setPixmap(QtGui.QPixmap("minister.png"))
        self.minister_pic_4.setObjectName("minister_pic_4")
        self.minister_pic_4.setScaledContents(True)
        self.minister_pic_4.hide()
        self.its_thief_1 = QtWidgets.QPushButton(self.groupBox)
        self.its_thief_1.setGeometry(QtCore.QRect(110, 170, 100, 100))
        self.its_thief_1.setObjectName("its_thief_1")
        self.its_thief_1.setStyleSheet("background-color:green")
        self.its_thief_1.hide()
        self.its_thief_2 = QtWidgets.QPushButton(self.groupBox)
        self.its_thief_2.setGeometry(QtCore.QRect(530, 170, 100, 100))
        self.its_thief_2.setObjectName("its_thief_2")
        self.its_thief_2.setStyleSheet("background-color:green")
        self.its_thief_2.hide()
        self.its_thief_3 = QtWidgets.QPushButton(self.groupBox)
        self.its_thief_3.setGeometry(QtCore.QRect(110, 420, 100, 100))
        self.its_thief_3.setObjectName("its_thief_3")
        self.its_thief_3.setStyleSheet("background-color:green")
        self.its_thief_3.hide()
        self.its_thief_4 = QtWidgets.QPushButton(self.groupBox)
        self.its_thief_4.setGeometry(QtCore.QRect(530, 420, 100, 100))
        self.its_thief_4.setObjectName("its_thief_4")
        self.its_thief_4.setStyleSheet("background-color:green")
        self.its_thief_4.hide()
        self.next = QtWidgets.QPushButton(self.groupBox)
        self.next.setGeometry(QtCore.QRect(320, 460, 161, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.next.setPalette(palette)
        self.next.setStyleSheet("background-color:orange;\n"
                                "color:blue;\n"
                                "border-style:outset;\n"
                                "border-width:2px;\n"
                                "font:bold 20px")
        self.next.setObjectName("next")
        self.next.hide()
        self.target = QtWidgets.QSpinBox(self.groupBox)
        self.target.setGeometry(QtCore.QRect(300, 200, 200, 50))
        self.target.setMinimum(2000)
        self.target.setMaximum(100000)
        self.target.setSingleStep(2000)
        self.target.setObjectName("spinBox")
        self.target.setFont(QtGui.QFont("Arial", 20))
        self.target.setStyleSheet("background-color:yellow")
        self.target.hide()
        self.start = QtWidgets.QPushButton(self.groupBox)
        self.start.setGeometry(QtCore.QRect(280, 490, 161, 41))
        self.start.setStyleSheet("color:blue;"
                                 "background-color:pink")
        self.start.hide()
        self.label2 = QtWidgets.QLabel(self.groupBox)
        self.label2.setGeometry(QtCore.QRect(280, 400, 371, 41))
        self.label2.setStyleSheet("color:yellow")
        self.label2.close()
        self.winner_pic = QtWidgets.QLabel(self.groupBox)
        self.winner_pic.setGeometry(QtCore.QRect(130, 80, 550, 400))
        self.winner_pic.setPixmap(QtGui.QPixmap("king.png"))
        self.winner_pic.setScaledContents(True)
        self.winner_pic.close()
        self.restart = QtWidgets.QPushButton(self.groupBox)
        self.restart.setGeometry(QtCore.QRect(300, 490, 161, 41))
        self.restart.setStyleSheet("color:blue;"
                                   "background-color:orange")
        self.restart2 = QtWidgets.QPushButton(self.centralwidget)
        self.restart2.setGeometry(740, 2, 50, 18)
        self.restart2.setStyleSheet("color:blue;"
                                    "background-color:orange")
        font = QtGui.QFont()
        font.setPointSize(10)
        self.restart2.setFont(font)
        self.restart.close()

        self.its_thief_1.clicked.connect(self.its_thief_1_clicked)
        self.its_thief_2.clicked.connect(self.its_thief_2_clicked)
        self.its_thief_3.clicked.connect(self.its_thief_3_clicked)
        self.its_thief_4.clicked.connect(self.its_thief_4_clicked)
        self.next.clicked.connect(self.next_clicked)
        self.restart.clicked.connect(self.restart_clicked)
        self.restart2.clicked.connect(self.restart_clicked)
        self.restart2.close()

        self.submit.clicked.connect(self.submit_clicked)
        self.shuffle.clicked.connect(self.shuffle_clicked)
        self.show_king.clicked.connect(self.show_king_clicked)
        self.show_minister.clicked.connect(self.show_minister_clicked)
        self.start.clicked.connect(self.start_clicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "King, Minister, Soldier, Thief"))
        self.groupBox.setTitle(_translate("MainWindow", "King, Minister, Soldier, Thief"))
        self.player1.setText(_translate("MainWindow", "Player 1"))
        self.player2.setText(_translate("MainWindow", "Player 2"))
        self.player3.setText(_translate("MainWindow", "Player 3"))
        self.player4.setText(_translate("MainWindow", "Player 4"))
        self.name_1.setText(_translate("MainWindow", "Player1"))
        self.name_2.setText(_translate("MainWindow", "Player2"))
        self.name_3.setText(_translate("MainWindow", "Player3"))
        self.name_4.setText(_translate("MainWindow", "Player4"))
        self.submit.setText(_translate("MainWindow", "Submit"))
        self.submit.setShortcut(_translate("MainWindow", "Return"))
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        self.label.setText(_translate("MainWindow", "Set the Players\' Name"))
        self.score_1.setText(_translate("MainWindow", "Total Score: 0"))
        self.score_2.setText(_translate("MainWindow", "Total Score: 0"))
        self.score_3.setText(_translate("MainWindow", "Total Score: 0"))
        self.score_4.setText(_translate("MainWindow", "Total Score: 0"))
        self.shuffle.setText(_translate("Mainwindow", "Shuffle"))
        self.shuffle.setShortcut(_translate("MainWindow", "Return"))
        self.show_king.setText(_translate("MainWindow", "Show the King"))
        self.show_king.setShortcut(_translate("MainWindow", "Return"))
        self.show_minister.setText(_translate("MainWindow", "Show Minister"))
        self.show_minister.setShortcut(_translate("MainWindow", "Return"))
        self.next.setText(_translate("MainWindow", "Next"))
        self.next.setShortcut(_translate("Mainwindow", "Return"))
        self.start.setText(_translate("MainWindow", "Start Game"))
        self.start.setShortcut(_translate("MainWindow", "Return"))
        self.restart.setText(_translate("MainWindow", "Restart Game"))
        self.restart.setShortcut(_translate("MainWindow", "Return"))
        self.restart2.setText(_translate("MainWindow", "Restart"))
        self.restart2.setShortcut(_translate("MainWindow", "Ctrl+R"))

    def start_clicked(self):
        if self.target.text() == "":
            self.target_score = 0
        else:
            self.target_score = int(self.target.text())
        if self.target_score < 2000:
            pass
        else:
            self.start.close()
            self.target.close()
            self.player_1.show()
            self.player_2.show()
            self.player_3.show()
            self.player_4.show()
            self.score_1.show()
            self.score_2.show()
            self.score_3.show()
            self.score_4.show()
            self.shuffle.show()
            self.label.close()

    def submit_clicked(self):
        _translate = QtCore.QCoreApplication.translate
        self.player_1_name = self.name_1.text()
        self.player_2_name = self.name_2.text()
        self.player_3_name = self.name_3.text()
        self.player_4_name = self.name_4.text()
        self.label.setText("Set the Target Score between 2000 and 50000!")
        self.label.adjustSize()
        self.submit.close()
        self.name_1.close()
        self.name_2.close()
        self.name_3.close()
        self.name_4.close()
        self.player1.close()
        self.player2.close()
        self.player3.close()
        self.player4.close()
        self.player_1.setText(self.player_1_name)
        self.player_2.setText(self.player_2_name)
        self.player_3.setText(self.player_3_name)
        self.player_4.setText(self.player_4_name)
        self.target.show()
        self.start.show()
        self.restart2.show()

    def shuffle_clicked(self):
        self.lst = ["King", "Minister", "Soldier", "Thief"]
        role_1 = random.choice(self.lst)
        self.lst.remove(role_1)
        role_2 = random.choice(self.lst)
        self.lst.remove(role_2)
        role_3 = random.choice(self.lst)
        self.lst.remove(role_3)
        role_4 = random.choice(self.lst)
        self.lst2 = [role_1, role_2, role_3, role_4]
        self.shuffle.close()
        self.show_king.show()

    def show_king_clicked(self):
        self.show_king.hide()
        if self.lst2.index("King") == 0:
            self.king = self.player_1.text()
            scores = str(int(self.score_1.text().replace("Total Score: ", "")) + 1000)
            self.score_1.setText("Total Score: " + scores)
            self.king_pic_1.show()
        elif self.lst2.index("King") == 1:
            self.king = self.player_2.text()
            scores = str(int(self.score_2.text().replace("Total Score: ", "")) + 1000)
            self.score_2.setText("Total Score: " + scores)
            self.king_pic_2.show()
        elif self.lst2.index("King") == 2:
            self.king = self.player_3.text()
            scores = str(int(self.score_3.text().replace("Total Score: ", "")) + 1000)
            self.score_3.setText("Total Score: " + scores)
            self.king_pic_3.show()
        elif self.lst2.index("King") == 3:
            self.king = self.player_4.text()
            scores = str(int(self.score_4.text().replace("Total Score: ", "")) + 1000)
            self.score_4.setText("Total Score: " + scores)
            self.king_pic_4.show()
        else:
            pass
        self.label1.setText(f"Woo! {self.king} is the King!")
        self.show_minister.show()
        QtTest.QTest.qWait(1)
        playsound("Applause.wav")

    def show_minister_clicked(self):
        self.show_minister.hide()
        if self.lst2.index("Minister") == 0:
            self.minister = self.player_1.text()
            self.minister_pic_1.show()
        elif self.lst2.index("Minister") == 1:
            self.minister = self.player_2.text()
            self.minister_pic_2.show()
        elif self.lst2.index("Minister") == 2:
            self.minister = self.player_3.text()
            self.minister_pic_3.show()
        elif self.lst2.index("Minister") == 3:
            self.minister = self.player_4.text()
            self.minister_pic_4.show()
        else:
            pass
        self.label1.setText(f'''
        {self.minister} is the Minister.
        Now {self.minister}, find the Thief and the Soldier!
        ''')
        self.label1.adjustSize()
        self.label1.move(160, 180)
        if self.lst2.index("Thief") == 0 or self.lst2.index("Soldier") == 0:
            self.its_thief_1.setText(f"{self.player_1.text()} is a Thief")
            self.its_thief_1.adjustSize()
            self.its_thief_1.show()
            self.its_thief_1.setEnabled(True)
        if self.lst2.index("Thief") == 1 or self.lst2.index("Soldier") == 1:
            self.its_thief_2.setText(f"{self.player_2.text()} is a Thief")
            self.its_thief_2.adjustSize()
            self.its_thief_2.show()
            self.its_thief_2.setEnabled(True)
        if self.lst2.index("Thief") == 2 or self.lst2.index("Soldier") == 2:
            self.its_thief_3.setText(f"{self.player_3.text()} is a Thief")
            self.its_thief_3.adjustSize()
            self.its_thief_3.show()
            self.its_thief_3.setEnabled(True)
        if self.lst2.index("Thief") == 3 or self.lst2.index("Soldier") == 3:
            self.its_thief_4.setText(f"{self.player_4.text()} is a Thief")
            self.its_thief_4.adjustSize()
            self.its_thief_4.show()
            self.its_thief_4.setEnabled(True)

    def its_thief_1_clicked(self):
        if self.lst2[0] == "Thief":
            self.label1.setText("Great! Correct Choice.")
            minister_index = self.lst2.index("Minister")
            if minister_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores += 800
                self.score_1.setText(f"Total Score: {scores}")
            elif minister_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores += 800
                self.score_2.setText(f"Total Score: {scores}")
            elif minister_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores += 800
                self.score_3.setText(f"Total Score: {scores}")
            elif minister_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores += 800
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("Correct Choice.wav")
        else:
            self.label1.setText("Oops! Wrong Choice")
            thief_index = self.lst2.index("Thief")
            if thief_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_1.setText(f"Total Score: {scores}")
            elif thief_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_2.setText(f"Total Score: {scores}")
            elif thief_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_3.setText(f"Total Score: {scores}")
            elif thief_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("buzzer.wav")
        soldier_index = self.lst2.index("Soldier")
        if soldier_index == 0:
            scores = int(self.score_1.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_1.setText(f"Total Score: {scores}")
        elif soldier_index == 1:
            scores = int(self.score_2.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_2.setText(f"Total Score: {scores}")
        elif soldier_index == 2:
            scores = int(self.score_3.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_3.setText(f"Total Score: {scores}")
        elif soldier_index == 3:
            scores = int(self.score_4.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_4.setText(f"Total Score: {scores}")
        self.its_thief_1.hide()
        self.its_thief_2.hide()
        self.its_thief_3.hide()
        self.its_thief_4.hide()
        self.its_thief_1.setEnabled(False)
        self.its_thief_2.setEnabled(False)
        self.its_thief_3.setEnabled(False)
        self.its_thief_4.setEnabled(False)
        self.next.show()

    def its_thief_2_clicked(self):
        if self.lst2[1] == "Thief":
            self.label1.setText("Great! Correct Choice.")
            minister_index = self.lst2.index("Minister")
            if minister_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores += 800
                self.score_1.setText(f"Total Score: {scores}")
            elif minister_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores += 800
                self.score_2.setText(f"Total Score: {scores}")
            elif minister_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores += 800
                self.score_3.setText(f"Total Score: {scores}")
            elif minister_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores += 800
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("Correct Choice.wav")
        else:
            self.label1.setText("Oops! Wrong Choice.")
            thief_index = self.lst2.index("Thief")
            if thief_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_1.setText(f"Total Score: {scores}")
            elif thief_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_2.setText(f"Total Score: {scores}")
            elif thief_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_3.setText(f"Total Score: {scores}")
            elif thief_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("buzzer.wav")
        soldier_index = self.lst2.index("Soldier")
        if soldier_index == 0:
            scores = int(self.score_1.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_1.setText(f"Total Score: {scores}")
        elif soldier_index == 1:
            scores = int(self.score_2.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_2.setText(f"Total Score: {scores}")
        elif soldier_index == 2:
            scores = int(self.score_3.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_3.setText(f"Total Score: {scores}")
        elif soldier_index == 3:
            scores = int(self.score_4.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_4.setText(f"Total Score: {scores}")
        self.its_thief_1.hide()
        self.its_thief_2.hide()
        self.its_thief_3.hide()
        self.its_thief_4.hide()
        self.its_thief_1.setEnabled(False)
        self.its_thief_2.setEnabled(False)
        self.its_thief_3.setEnabled(False)
        self.its_thief_4.setEnabled(False)
        self.next.show()

    def its_thief_3_clicked(self):
        if self.lst2[2] == "Thief":
            self.label1.setText("Great! Correct Choice.")
            minister_index = self.lst2.index("Minister")
            if minister_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores += 800
                self.score_1.setText(f"Total Score: {scores}")
            elif minister_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores += 800
                self.score_2.setText(f"Total Score: {scores}")
            elif minister_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores += 800
                self.score_3.setText(f"Total Score: {scores}")
            elif minister_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores += 800
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("Correct Choice.wav")
        else:
            self.label1.setText("Oops! Wrong Choice.")
            thief_index = self.lst2.index("Thief")
            if thief_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_1.setText(f"Total Score: {scores}")
            elif thief_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_2.setText(f"Total Score: {scores}")
            elif thief_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_3.setText(f"Total Score: {scores}")
            elif thief_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("buzzer.wav")
        soldier_index = self.lst2.index("Soldier")
        if soldier_index == 0:
            scores = int(self.score_1.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_1.setText(f"Total Score: {scores}")
        elif soldier_index == 1:
            scores = int(self.score_2.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_2.setText(f"Total Score: {scores}")
        elif soldier_index == 2:
            scores = int(self.score_3.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_3.setText(f"Total Score: {scores}")
        elif soldier_index == 3:
            scores = int(self.score_4.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_4.setText(f"Total Score: {scores}")
        self.its_thief_1.hide()
        self.its_thief_2.hide()
        self.its_thief_3.hide()
        self.its_thief_4.hide()
        self.its_thief_1.setEnabled(False)
        self.its_thief_2.setEnabled(False)
        self.its_thief_3.setEnabled(False)
        self.its_thief_4.setEnabled(False)
        self.next.show()

    def its_thief_4_clicked(self):
        if self.lst2[3] == "Thief":
            self.label1.setText("Great! Correct Choice.")
            minister_index = self.lst2.index("Minister")
            if minister_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores += 800
                self.score_1.setText(f"Total Score: {scores}")
            elif minister_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores += 800
                self.score_2.setText(f"Total Score: {scores}")
            elif minister_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores += 800
                self.score_3.setText(f"Total Score: {scores}")
            elif minister_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores += 800
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("Correct Choice.wav")
        else:
            self.label1.setText("Oops! Wrong Choice.")
            thief_index = self.lst2.index("Thief")
            if thief_index == 0:
                scores = int(self.score_1.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_1.setText(f"Total Score: {scores}")
            elif thief_index == 1:
                scores = int(self.score_2.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_2.setText(f"Total Score: {scores}")
            elif thief_index == 2:
                scores = int(self.score_3.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_3.setText(f"Total Score: {scores}")
            elif thief_index == 3:
                scores = int(self.score_4.text().replace("Total Score: ", ""))
                scores = str(scores + 800)
                self.score_4.setText(f"Total Score: {scores}")
            QtTest.QTest.qWait(1)
            playsound("buzzer.wav")
        soldier_index = self.lst2.index("Soldier")
        if soldier_index == 0:
            scores = int(self.score_1.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_1.setText(f"Total Score: {scores}")
        elif soldier_index == 1:
            scores = int(self.score_2.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_2.setText(f"Total Score: {scores}")
        elif soldier_index == 2:
            scores = int(self.score_3.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_3.setText(f"Total Score: {scores}")
        elif soldier_index == 3:
            scores = int(self.score_4.text().replace("Total Score: ", ""))
            scores = str(scores + 500)
            self.score_4.setText(f"Total Score: {scores}")
        self.its_thief_1.hide()
        self.its_thief_2.hide()
        self.its_thief_3.hide()
        self.its_thief_4.hide()
        self.its_thief_1.setEnabled(False)
        self.its_thief_2.setEnabled(False)
        self.its_thief_3.setEnabled(False)
        self.its_thief_4.setEnabled(False)
        self.next.show()

    def next_clicked(self):
        self.shuffle.setText("Shuffle Again")
        self.shuffle.setShortcut("Return")
        self.shuffle.show()
        self.next.hide()
        self.king_pic_1.hide()
        self.king_pic_2.hide()
        self.king_pic_3.hide()
        self.king_pic_4.hide()
        self.minister_pic_1.hide()
        self.minister_pic_2.hide()
        self.minister_pic_3.hide()
        self.minister_pic_4.hide()
        self.label1.setText("")
        score1 = int(self.score_1.text().replace("Total Score: ", ""))
        score2 = int(self.score_2.text().replace("Total Score: ", ""))
        score3 = int(self.score_3.text().replace("Total Score: ", ""))
        score4 = int(self.score_4.text().replace("Total Score: ", ""))
        winner_num = 0
        for i in [score1, score2, score3, score4]:
            if self.target_score <= i:
                winner_num += 1
        if winner_num == 1:
            if score1 >= self.target_score:
                self.winner = self.player_1.text()
            elif score2 >= self.target_score:
                self.winner = self.player_2.text()
            elif score3 >= self.target_score:
                self.winner = self.player_3.text()
            elif score4 >= self.target_score:
                self.winner = self.player_4.text()
            else:
                self.winner = None
        elif winner_num > 1:
            max_score = max([score1, score2, score3, score4])
            if max_score == score1:
                self.winner = self.player_1.text()
            elif max_score == score2:
                self.winner = self.player_2.text()
            elif max_score == score3:
                self.winner = self.player_3.text()
            elif max_score == score4:
                self.winner = self.player_4.text()
            else:
                self.winner = None

        try:
            if self.winner == self.player_1.text() or self.winner == self.player_2.text() or self.winner == self.player_3.text() or self.winner == self.player_4.text():
                self.player_1.close()
                self.player_2.close()
                self.player_3.close()
                self.player_4.close()
                self.score_1.close()
                self.score_2.close()
                self.score_3.close()
                self.score_4.close()
                self.restart.show()
                self.shuffle.close()
                self.winner_pic.show()
                self.label2.show()
                self.label2.setText(f"Woo! {self.winner} is the Winner!")
                QtTest.QTest.qWait(1)
                playsound("Winning Sound.wav")
        except:
            pass

    def restart_clicked(self):
        self.restart.close()
        self.winner_pic.close()
        self.label2.close()
        self.player1.show()
        self.player2.show()
        self.player3.show()
        self.player4.show()
        self.name_1.show()
        self.name_2.show()
        self.name_3.show()
        self.name_4.show()
        self.name_1.setText(self.player_1.text())
        self.name_2.setText(self.player_2.text())
        self.name_3.setText(self.player_3.text())
        self.name_4.setText(self.player_4.text())
        self.submit.show()
        self.label.setText("Set the Player\'s Name")
        self.label.show()
        self.restart2.close()
        self.target.close()
        self.start.close()
        self.player_1.close()
        self.player_2.close()
        self.player_3.close()
        self.player_4.close()
        self.score_1.close()
        self.score_2.close()
        self.score_3.close()
        self.score_4.close()
        self.shuffle.close()
        self.show_king.close()
        self.show_minister.close()


app = QApplication(sys.argv)
MainWindow = QtWidgets.QMainWindow()
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
MainWindow.show()
sys.exit(app.exec_())
